import pytest
from bot.keyboards import inline

def get_button_texts(keyboard):
    """–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫."""
    return [button.text for row in keyboard.inline_keyboard for button in row]

def test_get_student_main_menu():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≤ –º–µ–Ω—é —Å—Ç—É–¥–µ–Ω—Ç–∞ –µ—Å—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏, –≤ —Ç.—á. –¥–ª—è –∞–¥–º–∏–Ω–∞."""
    # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –û–±—ã—á–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç
    student_keyboard = inline.get_student_main_menu(viewer_role='student')
    student_buttons = get_button_texts(student_keyboard)
    
    assert "üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¥–æ–Ω–∞—Ü–∏—é" in student_buttons
    assert "üéÅ –ú–∞–≥–∞–∑–∏–Ω –º–µ—Ä—á–∞" in student_buttons
    assert "‚öôÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å" not in student_buttons

    # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ê–¥–º–∏–Ω –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –º–µ–Ω—é –∫–∞–∫ —Å—Ç—É–¥–µ–Ω—Ç
    admin_keyboard = inline.get_student_main_menu(viewer_role='admin')
    admin_buttons = get_button_texts(admin_keyboard)

    assert "üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¥–æ–Ω–∞—Ü–∏—é" in admin_buttons
    assert "‚≠ê –ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞" in admin_buttons
    assert "‚öôÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å" in admin_buttons

def test_get_admin_panel_keyboard():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ —É –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞, –∞ —É –æ–±—ã—á–Ω–æ–≥–æ - –Ω–µ—Ç."""
    # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –û–±—ã—á–Ω—ã–π –∞–¥–º–∏–Ω
    admin_keyboard = inline.get_admin_panel_keyboard(viewer_role='admin')
    admin_buttons = get_button_texts(admin_keyboard)
    
    assert "üë• –£–ø—Ä. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏" in admin_buttons
    assert "üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö" not in admin_buttons

    # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω
    main_admin_keyboard = inline.get_admin_panel_keyboard(viewer_role='main_admin')
    main_admin_buttons = get_button_texts(main_admin_keyboard)

    assert "üë• –£–ø—Ä. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏" in main_admin_buttons
    assert "üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö" in main_admin_buttons

def test_get_user_management_keyboard_permissions():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–µ–π —Å–º–æ—Ç—Ä—è—â–µ–≥–æ –∏ —Ü–µ–ª–∏.
    """
    # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –æ–±—ã—á–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
    kbd1 = inline.get_user_management_keyboard(
        target_user_id=1, target_user_role='student', viewer_role='main_admin', is_blocked=False
    )
    btn1 = get_button_texts(kbd1)
    assert "üëë‚ûï –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–æ–º" in btn1
    assert "üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" in btn1
    assert "üëë‚ûñ –†–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∞" not in btn1

    # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –æ–±—ã—á–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
    kbd2 = inline.get_user_management_keyboard(
        target_user_id=1, target_user_role='admin', viewer_role='main_admin', is_blocked=False
    )
    btn2 = get_button_texts(kbd2)
    assert "üëë‚ûñ –†–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∞" in btn2
    assert "üëë‚ûï –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–æ–º" not in btn2

    # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –û–±—ã—á–Ω—ã–π –∞–¥–º–∏–Ω —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞ (–Ω–µ –º–æ–∂–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∞–¥–º–∏–Ω–∞–º–∏/–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞–º–∏)
    kbd3 = inline.get_user_management_keyboard(
        target_user_id=1, target_user_role='volunteer', viewer_role='admin', is_blocked=False
    )
    btn3 = get_button_texts(kbd3)
    assert "üßë‚Äçüéì –°–Ω—è—Ç—å —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞" in btn3
    assert "üëë‚ûï –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–æ–º" not in btn3
    assert "üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å" not in btn3
    
    
def test_admin_panel_keyboard_for_admin():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –æ–±—ã—á–Ω—ã–π –∞–¥–º–∏–Ω –≤–∏–¥–∏—Ç —Å–≤–æ—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ë–ï–ó –∫–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞.
    """
    keyboard = inline.get_admin_panel_keyboard(viewer_role='admin')
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ callback_data –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
    callbacks = []
    for row in keyboard.inline_keyboard:
        for button in row:
            callbacks.append(button.callback_data)

    assert "admin_manage_users" in callbacks
    assert "ma_export_data" not in callbacks # –ì–ª–∞–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞

def test_admin_panel_keyboard_for_main_admin():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≥–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω –≤–∏–¥–∏—Ç —Å–≤–æ—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –° –∫–Ω–æ–ø–∫–æ–π —ç–∫—Å–ø–æ—Ä—Ç–∞.
    """
    keyboard = inline.get_admin_panel_keyboard(viewer_role='main_admin')
    
    callbacks = []
    for row in keyboard.inline_keyboard:
        for button in row:
            callbacks.append(button.callback_data)

    assert "admin_manage_users" in callbacks
    assert "ma_export_data" in callbacks # –ì–ª–∞–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞

def test_user_management_keyboard_roles():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏ –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ—è–≤–ª—è—é—Ç—Å—è/–∏—Å—á–µ–∑–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ.
    """
    # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –æ–±—ã—á–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
    kb1 = inline.get_user_management_keyboard(
        target_user_id=1, target_user_role='admin', viewer_role='main_admin', is_blocked=False
    )
    cb1 = {b.callback_data for r in kb1.inline_keyboard for b in r}
    assert "ma_demote_admin_1" in cb1
    assert "ma_promote_admin_1" not in cb1
    assert "ma_block_user_1" in cb1

    # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞
    kb2 = inline.get_user_management_keyboard(
        target_user_id=2, target_user_role='volunteer', viewer_role='main_admin', is_blocked=False
    )
    cb2 = {b.callback_data for r in kb2.inline_keyboard for b in r}
    assert "ma_promote_admin_2" in cb2
    assert "admin_demote_volunteer_2" in cb2

    # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –û–±—ã—á–Ω—ã–π –∞–¥–º–∏–Ω —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞ (–Ω–µ –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å –∫–Ω–æ–ø–∫–∏ –≥–ª. –∞–¥–º–∏–Ω–∞)
    kb3 = inline.get_user_management_keyboard(
        target_user_id=3, target_user_role='volunteer', viewer_role='admin', is_blocked=False
    )
    cb3 = {b.callback_data for r in kb3.inline_keyboard for b in r}
    assert "ma_promote_admin_3" not in cb3
    assert "ma_block_user_3" not in cb3
    assert "admin_demote_volunteer_3" in cb3