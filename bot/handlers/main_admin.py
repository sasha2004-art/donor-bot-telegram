import io
import csv
import logging
import zipfile 
import datetime
from aiogram import Router, F, types, Bot
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from bot.db import admin_requests, user_requests
from bot.states.states import AdminManagement, BlockUser
from bot.keyboards import inline
from bot.filters.role import RoleFilter
from .admin import show_admin_panel as show_admin_panel_logic

# logging.basicConfig(level=logging.INFO)  # –õ–æ–≥–∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã

router = Router()

@router.callback_query(F.data == "main_admin_panel", RoleFilter('main_admin'))
async def show_unified_admin_panel(callback: types.CallbackQuery, session: AsyncSession):
    # –ì–ª–∞–≤–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Å –¥–æ–ø. –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
    viewer = await user_requests.get_user_by_tg_id(session, callback.from_user.id)
    if not viewer: 
        await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å.", show_alert=True)
        return

    # –ò–°–ü–†–ê–í–õ–ï–ù–û: parse_mode="HTML" –∏ —Ç–µ–∫—Å—Ç —Å HTML —Ç–µ–≥–∞–º–∏
    await callback.message.edit_text(
        text="‚öôÔ∏è <b>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>",
        reply_markup=inline.get_admin_panel_keyboard(viewer.role),
        parse_mode="HTML"
    )
    await callback.answer()


# @router.callback_query(F.data == "main_admin_panel", RoleFilter('main_admin'))
# async def show_main_admin_panel(callback: types.CallbackQuery):
#     await callback.message.edit_text(
#         text="üëë *–ü–∞–Ω–µ–ª—å –ì–ª–∞–≤–Ω–æ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*",
#         reply_markup=inline.get_main_admin_panel_keyboard(),
#         parse_mode="Markdown"
#     )
#     await callback.answer()

# @router.callback_query(F.data == "admin_panel", RoleFilter('main_admin'))
# async def show_admin_panel_for_main_admin(callback: types.CallbackQuery):
#     await show_admin_panel_logic(callback)