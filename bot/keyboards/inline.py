from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from bot.db.models import MerchItem, InfoText
from aiogram.fsm.context import FSMContext

# --- –ö–õ–ê–í–ò–ê–¢–£–†–´ ---

def get_back_to_main_menu_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_menu"))
    return builder.as_markup()

def get_category_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–°—Ç—É–¥–µ–Ω—Ç", callback_data="category_student"))
    builder.row(InlineKeyboardButton(text="–°–æ—Ç—Ä—É–¥–Ω–∏–∫", callback_data="category_employee"))
    builder.row(InlineKeyboardButton(text="–í–Ω–µ—à–Ω–∏–π –¥–æ–Ω–æ—Ä", callback_data="category_external"))
    return builder.as_markup()

def get_consent_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ü–î–Ω."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚úÖ –ü—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è", callback_data="consent_given"))
    return builder.as_markup()


def get_student_main_menu(viewer_role: str = 'student'):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¥–æ–Ω–∞—Ü–∏—é", callback_data="register_donation"))
    builder.row(InlineKeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="my_profile"))
    builder.row(InlineKeyboardButton(text="üéÅ –ú–∞–≥–∞–∑–∏–Ω –º–µ—Ä—á–∞", callback_data="merch_store"))
    builder.row(InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info"))
    builder.row(InlineKeyboardButton(text="‚öïÔ∏è –ú–æ–∏ –º–µ–¥–æ—Ç–≤–æ–¥—ã", callback_data="my_waivers"))
    builder.row(InlineKeyboardButton(text="‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º", callback_data="ask_question"))
    
    if viewer_role == 'volunteer':
        builder.row(InlineKeyboardButton(
            text="‚≠ê –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞",
            callback_data="volunteer_panel"
        ))
    elif viewer_role in ['admin', 'main_admin']:
        builder.row(InlineKeyboardButton(
            text="‚≠ê –ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞",
            callback_data="switch_to_volunteer_view"
        ))
        builder.row(InlineKeyboardButton(
            text="‚öôÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å",
            callback_data="admin_panel"
        ))
        
    return builder.as_markup()

def get_volunteer_main_menu(viewer_role: str = 'volunteer'):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚≠ê –ú–µ–Ω—é –≤–æ–ª–æ–Ω—Ç—ë—Ä–∞", callback_data="volunteer_panel"))
    builder.row(InlineKeyboardButton(text="üë§ –ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º –¥–æ–Ω–æ—Ä–∞", callback_data="switch_to_donor_view"))
    return builder.as_markup()

def get_admin_main_menu(viewer_role: str = 'admin'):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚öôÔ∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="admin_panel"))
    return builder.as_markup()  

def get_main_admin_main_menu(viewer_role: str = 'main_admin'):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚öôÔ∏è –û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="admin_panel"))
    return builder.as_markup()

def get_university_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–ù–ò–Ø–£ –ú–ò–§–ò", callback_data="university_mifi"))
    builder.row(InlineKeyboardButton(text="–î—Ä—É–≥–æ–π –≤—É–∑", callback_data="university_other"))
    return builder.as_markup()


def get_faculties_keyboard():
    faculties = ["–ò–ò–ö–°", "–§–ò–ë–°", "–ò–Ω–Ø–∑", "–ò–§–¢–≠–ë", "–ë–ú–¢", "–ò–§–ò–ë"]
    builder = InlineKeyboardBuilder()
    for faculty in faculties:
        builder.row(InlineKeyboardButton(text=faculty, callback_data=f"faculty_{faculty}"))
    builder.row(InlineKeyboardButton(text="–î—Ä—É–≥–æ–π/–ù–µ –∏–∑ —Å–ø–∏—Å–∫–∞", callback_data="faculty_Other"))
    return builder.as_markup()

def get_gender_inline_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="–ú—É–∂—Å–∫–æ–π", callback_data="gender_male"),
        InlineKeyboardButton(text="–ñ–µ–Ω—Å–∫–∏–π", callback_data="gender_female")
    )
    return builder.as_markup()

def get_profile_menu_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üìä –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ", callback_data="profile_data"))
    builder.row(InlineKeyboardButton(text="ü©∏ –ò—Å—Ç–æ—Ä–∏—è –¥–æ–Ω–∞—Ü–∏–π", callback_data="profile_history"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_menu"))
    return builder.as_markup()

def get_back_to_profile_menu_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å", callback_data="my_profile"))
    return builder.as_markup()

def get_info_menu_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è?", callback_data="info_prepare"))
    builder.row(InlineKeyboardButton(text="–ü—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è", callback_data="info_contraindications"))
    builder.row(InlineKeyboardButton(text="–ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø–æ—Å–ª–µ?", callback_data="info_after"))
    builder.row(InlineKeyboardButton(text="ü©∏ –û –¥–æ–Ω–æ—Ä—Å—Ç–≤–µ –∫–æ—Å—Ç–Ω–æ–≥–æ –º–æ–∑–≥–∞ (–î–ö–ú)", callback_data="info_dkm"))
    builder.row(InlineKeyboardButton(text="üè• –û –¥–æ–Ω–∞—Ü–∏—è—Ö –≤ –ú–ò–§–ò", callback_data="info_mifi_process"))
    builder.row(InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º–∏", callback_data="info_contacts"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_menu"))
    return builder.as_markup()

def get_back_to_info_menu_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —Ä–∞–∑–¥–µ–ª–∞–º", callback_data="info"))
    return builder.as_markup()

def get_merch_store_keyboard(item: MerchItem, page: int, total_pages: int):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=f'–ö—É–ø–∏—Ç—å –∑–∞ {item.price}–ë', callback_data=f"buy_merch_{item.id}"))
    nav_buttons = []
    prev_page = total_pages if page == 1 else page - 1
    nav_buttons.append(InlineKeyboardButton(text="‚óÄÔ∏è", callback_data=f"merch_page_{prev_page}"))
    nav_buttons.append(InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data="ignore"))
    next_page = 1 if page == total_pages else page + 1
    nav_buttons.append(InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data=f"merch_page_{next_page}"))
    builder.row(*nav_buttons)
    builder.row(InlineKeyboardButton(text="üõçÔ∏è –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_orders"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_menu"))
    return builder.as_markup()

def get_purchase_confirmation_keyboard(item_id: int):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_buy_{item_id}"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="merch_store")
    )
    return builder.as_markup()

def get_back_to_merch_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–∞–≥–∞–∑–∏–Ω", callback_data="merch_store"))
    return builder.as_markup()
    
def get_admin_panel_keyboard(viewer_role: str):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üóìÔ∏è –£–ø—Ä. –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏", callback_data="admin_manage_events"))
    builder.row(types.InlineKeyboardButton(text="‚ùì –í–æ–ø—Ä–æ—Å—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="admin_answer_questions"))
    builder.row(InlineKeyboardButton(text="üë• –£–ø—Ä. –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", callback_data="admin_manage_users"))
    builder.row(InlineKeyboardButton(text="üõçÔ∏è –£–ø—Ä. –º–∞–≥–∞–∑–∏–Ω–æ–º", callback_data="admin_manage_merch"))
    builder.row(InlineKeyboardButton(text="üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–æ–≤", callback_data="admin_process_orders"))
    builder.row(InlineKeyboardButton(text="üì£ –†–∞—Å—Å—ã–ª–∫–∏", callback_data="admin_mailing"))
    builder.row(InlineKeyboardButton(text="üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="admin_analytics"))
    builder.row(InlineKeyboardButton(text="üìù –†–µ–¥. –∏–Ω—Ñ–æ-—Ä–∞–∑–¥–µ–ª—ã", callback_data="admin_edit_info"))
    if viewer_role == 'main_admin':
        builder.row(
        types.InlineKeyboardButton(text="üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", callback_data="ma_export_data"),
        types.InlineKeyboardButton(text="üì• –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", callback_data="ma_import_data")
        )
    builder.row(InlineKeyboardButton(text="üë§ –ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º –¥–æ–Ω–æ—Ä–∞", callback_data="switch_to_donor_view"))
    return builder.as_markup()



def get_info_sections_for_editing_keyboard(sections: list[InfoText]):
    builder = InlineKeyboardBuilder()
    for section in sections:
        builder.row(types.InlineKeyboardButton(
            text=section.section_title,
            callback_data=f"edit_info_{section.section_key}"
        ))
    builder.row(types.InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="admin_panel"))
    return builder.as_markup()

def get_analytics_main_menu_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (KPI)", callback_data="analytics_kpi"))
    builder.row(InlineKeyboardButton(text="üìÖ –ê–Ω–∞–ª–∏–∑ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π", callback_data="analytics_events_select"))
    builder.row(InlineKeyboardButton(text="üìÑ –û—Ç—á–µ—Ç—ã", callback_data="analytics_reports"))
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –í –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin_panel"))
    return builder.as_markup()

def get_reports_menu_keyboard():
    builder = InlineKeyboardBuilder()
    # I. –û—Ç—á–µ—Ç—ã –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –¥–æ–Ω–æ—Ä–æ–≤
    builder.row(InlineKeyboardButton(text="–î–æ–Ω–æ—Ä—ã-–æ–¥–Ω–æ–¥–Ω–µ–≤–∫–∏", callback_data="report_churn_donors"))
    builder.row(InlineKeyboardButton(text="–£–≥–∞—Å–∞—é—â–∏–µ –¥–æ–Ω–æ—Ä—ã", callback_data="report_lapsed_donors"))
    builder.row(InlineKeyboardButton(text="–¢–æ–ø-20 –¥–æ–Ω–æ—Ä–æ–≤", callback_data="report_top_donors"))
    # builder.row(InlineKeyboardButton(text="–î–æ–Ω–æ—Ä—ã —Ä–µ–¥–∫–æ–π –∫—Ä–æ–≤–∏", callback_data="report_rare_blood_donors"))
    # II. –û—Ç—á–µ—Ç—ã –ø–æ —Å–µ–≥–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏–∏
    builder.row(InlineKeyboardButton(text="–°–∞–º—ã–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—ã", callback_data="report_top_faculties"))
    builder.row(InlineKeyboardButton(text="–ö–∞–Ω–¥–∏–¥–∞—Ç—ã –≤ —Ä–µ–≥–∏—Å—Ç—Ä –î–ö–ú", callback_data="report_dkm_candidates"))
    # III. –û—Ç—á–µ—Ç—ã –ø–æ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    builder.row(InlineKeyboardButton(text="–ü–æ—Ç–µ—Ä—è –ø–æ—Å–ª–µ –æ–ø—Ä–æ—Å–Ω–∏–∫–∞", callback_data="report_survey_dropoff"))

    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="admin_analytics"))
    return builder.as_markup()

def get_events_for_analysis_keyboard(events: list):
    builder = InlineKeyboardBuilder()
    for event in events:
        builder.row(InlineKeyboardButton(
            text=f"{event.event_datetime.strftime('%d.%m.%y')} - {event.name}",
            callback_data=f"analyze_event_{event.id}"
        ))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="admin_analytics"))
    return builder.as_markup()

def get_events_management_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ", callback_data="admin_create_event"))
    builder.row(InlineKeyboardButton(text="üìú –ü—Ä–æ—Å–º–æ—Ç—Ä/–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö", callback_data="admin_view_events"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="admin_panel"))
    return builder.as_markup()

def get_single_event_management_keyboard(event_id: int, registration_is_open: bool, has_feedback: bool = False):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"admin_edit_event_{event_id}"))
    reg_status_text = "üîí –ó–∞–∫—Ä—ã—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é" if registration_is_open else "üîì –û—Ç–∫—Ä—ã—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"
    builder.row(InlineKeyboardButton(text=reg_status_text, callback_data=f"admin_toggle_reg_{event_id}"))
    builder.row(InlineKeyboardButton(text="üë• –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (.csv)", callback_data=f"admin_event_participants_{event_id}"))
    builder.row(InlineKeyboardButton(text="üö® –û—Ç–º–µ–Ω–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ", callback_data=f"admin_cancel_event_{event_id}"))
    if has_feedback:
        builder.row(InlineKeyboardButton(text="üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã", callback_data=f"admin_view_feedback_{event_id}"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ö —Å–ø–∏—Å–∫—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π", callback_data="admin_view_events"))
    return builder.as_markup()

def get_back_to_admin_panel_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –í –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="admin_panel"))
    return builder.as_markup()

def get_user_management_keyboard(target_user_id: int, target_user_role: str, viewer_role: str, is_blocked: bool):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üéüÔ∏è –£–ø—Ä. —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è–º–∏", callback_data=f"admin_manage_user_regs_{target_user_id}"))
    builder.row(InlineKeyboardButton(text="‚öïÔ∏è –£–ø—Ä. –º–µ–¥–æ—Ç–≤–æ–¥–∞–º–∏", callback_data=f"admin_manage_waivers_{target_user_id}"))

    builder.row(InlineKeyboardButton(text="+/- –ë–∞–ª–ª—ã", callback_data=f"admin_points_{target_user_id}"))

    if target_user_role == 'student':
        builder.row(InlineKeyboardButton(text="‚≠ê –ù–∞–∑–Ω–∞—á–∏—Ç—å –≤–æ–ª–æ–Ω—Ç–µ—Ä–æ–º", callback_data=f"admin_promote_volunteer_{target_user_id}"))
    elif target_user_role == 'volunteer':
        builder.row(InlineKeyboardButton(text="üßë‚Äçüéì –°–Ω—è—Ç—å —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞", callback_data=f"admin_demote_volunteer_{target_user_id}"))
    
    if viewer_role == 'main_admin' and target_user_role != 'main_admin':
        if target_user_role == 'admin':
            builder.row(InlineKeyboardButton(text="üëë‚ûñ –†–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∞", callback_data=f"ma_demote_admin_{target_user_id}"))
        else:
            builder.row(InlineKeyboardButton(text="üëë‚ûï –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–æ–º", callback_data=f"ma_promote_admin_{target_user_id}"))
        if is_blocked:
            builder.row(InlineKeyboardButton(text="‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"ma_unblock_user_{target_user_id}"))
        else:
            builder.row(InlineKeyboardButton(text="üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"ma_block_user_{target_user_id}"))
            
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é", callback_data="admin_manage_users"))
    return builder.as_markup()

def get_donation_type_keyboard():
    builder = InlineKeyboardBuilder()
    types = {'whole_blood': '–¶–µ–ª—å–Ω–∞—è –∫—Ä–æ–≤—å', 'plasma': '–ü–ª–∞–∑–º–∞', 'platelets': '–¢—Ä–æ–º–±–æ—Ü–∏—Ç—ã', 'erythrocytes': '–≠—Ä–∏—Ç—Ä–æ—Ü–∏—Ç—ã'}
    for key, value in types.items():
        builder.row(InlineKeyboardButton(text=value, callback_data=f"settype_{key}"))
    return builder.as_markup()

def get_main_admin_panel_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üëÆ‚Äç‚ôÇÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏", callback_data="ma_manage_admins"))
    builder.row(InlineKeyboardButton(text="üö´ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞–º–∏", callback_data="ma_manage_blocks"))
    builder.row(InlineKeyboardButton(text="üíæ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", callback_data="ma_export_data"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –í –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="admin_panel"))
    return builder.as_markup()
    
def get_back_to_ma_panel_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –í –ø–∞–Ω–µ–ª—å –≥–ª. –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="main_admin_panel"))
    return builder.as_markup()

def get_admins_management_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚ûï –ù–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="add_admin"))
    builder.row(InlineKeyboardButton(text="‚ûñ –†–∞–∑–∂–∞–ª–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="remove_admin"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="main_admin_panel"))
    return builder.as_markup()

def get_blocks_management_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="block_user_start"))
    builder.row(InlineKeyboardButton(text="üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="unblock_user_start"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="main_admin_panel"))
    return builder.as_markup()
    
def get_export_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–í—ã–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (.csv)", callback_data="export_users_csv"))
    builder.row(InlineKeyboardButton(text="–í—ã–≥—Ä—É–∑–∏—Ç—å –¥–æ–Ω–∞—Ü–∏–∏ (.csv)", callback_data="export_donations_csv"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="main_admin_panel"))
    return builder.as_markup()

def get_merch_management_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä", callback_data="admin_create_merch"))
    builder.row(InlineKeyboardButton(text="üìú –ü—Ä–æ—Å–º–æ—Ç—Ä/–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", callback_data="admin_view_merch"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="admin_panel"))
    return builder.as_markup()

def get_event_cancellation_confirmation_keyboard(event_id: int):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="‚ùå –î–∞, –æ—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"admin_confirm_cancel_{event_id}"),
        InlineKeyboardButton(text="‚Ü©Ô∏è –ù–µ—Ç, –Ω–∞–∑–∞–¥", callback_data=f"admin_show_event_{event_id}")
    )
    return builder.as_markup()

def get_back_to_events_menu_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏", callback_data="admin_manage_events"))
    return builder.as_markup()

def get_single_merch_management_keyboard(item_id: int, is_available: bool):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"admin_edit_merch_{item_id}"))
    availability_text = "‚úÖ –°–¥–µ–ª–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–º" if not is_available else "‚ùå –°–¥–µ–ª–∞—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º"
    builder.row(InlineKeyboardButton(text=availability_text, callback_data=f"admin_toggle_merch_{item_id}"))
    builder.row(InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä", callback_data=f"admin_delete_merch_{item_id}"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ö —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä–æ–≤", callback_data="admin_view_merch"))
    return builder.as_markup()

def get_merch_deletion_confirmation_keyboard(item_id: int):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üóëÔ∏è –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"admin_confirm_delete_merch_{item_id}"),
        InlineKeyboardButton(text="‚Ü©Ô∏è –ù–µ—Ç, –Ω–∞–∑–∞–¥", callback_data=f"admin_show_merch_{item_id}")
    )
    return builder.as_markup()

def get_back_to_merch_menu_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –º–∞–≥–∞–∑–∏–Ω–æ–º", callback_data="admin_manage_merch"))
    return builder.as_markup()

def get_already_registered_keyboard(event_id: int):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –º–æ—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é",
        callback_data=f"cancel_reg_{event_id}"
    ))
    builder.row(InlineKeyboardButton(
        text="‚Ü©Ô∏è –ö —Å–ø–∏—Å–∫—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π",
        callback_data="register_donation"
    ))
    return builder.as_markup()

def get_event_creation_confirmation_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚úÖ –°–æ–∑–¥–∞—Ç—å –∏ —Ä–∞–∑–æ—Å–ª–∞—Ç—å", callback_data="confirm_create_event"))
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_manage_events"))
    return builder.as_markup()

def get_mailing_audience_keyboard(current_filters: dict = None):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ —Ä–∞—Å—Å—ã–ª–∫–∏.
    –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ –∫–Ω–æ–ø–∫–∏.
    """
    if current_filters is None:
        current_filters = {}

    builder = InlineKeyboardBuilder()


    builder.row(InlineKeyboardButton(text="üì¢ –í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º", callback_data="mail_filter_role_all"))
    builder.row(InlineKeyboardButton(text="‚≠ê –í–æ–ª–æ–Ω—Ç–µ—Ä–∞–º –∏ –∞–¥–º–∏–Ω–∞–º", callback_data="mail_filter_role_volunteers"))
    builder.row(InlineKeyboardButton(text="‚öôÔ∏è –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º", callback_data="mail_filter_role_admins"))
    # builder.row(InlineKeyboardButton(text="-"*25, callback_data="ignore")) 

    # builder.row(InlineKeyboardButton(text="üéì –ü–æ –í–£–ó—É", callback_data="mail_audience_type_university"))
    builder.row(InlineKeyboardButton(text="üèõÔ∏è –ü–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É", callback_data="mail_audience_type_faculty"))
    
    if current_filters:
        builder.row(InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ (–ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é)", callback_data="mail_audience_finish"))

    # –ö–Ω–æ–ø–∫–∞ "–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã"
    if current_filters:
        builder.row(InlineKeyboardButton(text="üîÑ –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã", callback_data="mail_audience_reset"))

    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∏", callback_data="admin_panel"))
    
    return builder.as_markup()



def get_dynamic_mailing_filter_keyboard(items: list[str], filter_key: str, back_callback: str):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞.
    :param items: –°–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ (–Ω–∞–ø—Ä., —Å–ø–∏—Å–æ–∫ –í–£–ó–æ–≤).
    :param filter_key: –ö–ª—é—á —Ñ–∏–ª—å—Ç—Ä–∞ (–Ω–∞–ø—Ä., 'university').
    :param back_callback: callback_data –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥".
    """
    builder = InlineKeyboardBuilder()
    for item in items:
        builder.row(InlineKeyboardButton(text=item, callback_data=f"mail_filter_{filter_key}_{item}"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=back_callback))
    return builder.as_markup()

def get_mailing_confirmation_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üöÄ –î–∞, –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", callback_data="confirm_mailing"),
        InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç", callback_data="edit_mailing_text"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_panel")
    )
    return builder.as_markup()

def get_skip_media_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_media"))
    builder.row(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_panel"))
    return builder.as_markup()

def get_user_management_main_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üìú –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="admin_users_list_page_1"))
    builder.row(InlineKeyboardButton(text="üîç –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="admin_search_user"))
    builder.row(InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Ä—É—á–Ω—É—é", callback_data="admin_add_user_start"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin_panel"))
    return builder.as_markup()

def get_users_list_pagination_keyboard(page: int, total_pages: int):
    builder = InlineKeyboardBuilder()
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton(text="‚óÄÔ∏è", callback_data=f"admin_users_list_page_{page - 1}"))
    nav_buttons.append(InlineKeyboardButton(text=f"{page}/{total_pages}", callback_data="ignore"))
    if page < total_pages:
        nav_buttons.append(InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data=f"admin_users_list_page_{page + 1}"))
    builder.row(*nav_buttons)
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="admin_manage_users"))
    return builder.as_markup()

def get_successful_registration_keyboard(event_id: int):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(
        text="üî≤ –ú–æ–π QR-–∫–æ–¥ –¥–ª—è —ç—Ç–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è",
        callback_data=f"get_event_qr_{event_id}"
    ))
    builder.row(InlineKeyboardButton(
        text="üóìÔ∏è –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—å",
        callback_data=f"add_to_calendar_{event_id}"
    ))
    builder.row(InlineKeyboardButton(
        text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –º–æ—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é",
        callback_data=f"cancel_reg_{event_id}"
    ))
    builder.row(InlineKeyboardButton(
        text="‚Ü©Ô∏è –ö —Å–ø–∏—Å–∫—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π",
        callback_data="register_donation"
    ))
    return builder.as_markup()

def get_donation_confirmation_keyboard(user_id: int, event_id: int):
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
            callback_data=f"confirm_donation_{user_id}_{event_id}"
        ),
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="volunteer_panel"
        )
    )
    return builder.as_markup()

def get_volunteer_panel_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üì∑ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–æ–Ω–∞—Ü–∏—é (QR)", callback_data="confirm_donation_qr"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –¥–æ–Ω–æ—Ä–∞", callback_data="switch_to_donor_view"))
    return builder.as_markup()

def get_manual_registration_management_keyboard(user_id: int):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞: –∑–∞–ø–∏—Å–∞—Ç—å –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚ûï –ó–∞–ø–∏—Å–∞—Ç—å –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ", callback_data=f"admin_reg_start_{user_id}"))
    builder.row(InlineKeyboardButton(text="‚ûñ –û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", callback_data=f"admin_cancel_start_{user_id}"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", callback_data=f"admin_show_user_{user_id}"))
    return builder.as_markup()

def get_events_for_manual_registration_keyboard(user_id: int, events: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –¥–ª—è —Ä—É—á–Ω–æ–π –∑–∞–ø–∏—Å–∏."""
    builder = InlineKeyboardBuilder()
    for event in events:
        builder.row(InlineKeyboardButton(
            text=f"{event.event_date.strftime('%d.%m')} - {event.name}",
            callback_data=f"adminReg_{user_id}_{event.id}" 
        ))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=f"admin_manage_user_regs_{user_id}"))
    return builder.as_markup()

def get_registrations_for_cancellation_keyboard(user_id: int, registrations: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã."""
    builder = InlineKeyboardBuilder()
    for reg in registrations:
        builder.row(InlineKeyboardButton(
            text=f"‚ùå {reg.event.event_date.strftime('%d.%m')} - {reg.event.name}",
            callback_data=f"adminCancel_{user_id}_{reg.event_id}"
        ))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data=f"admin_manage_user_regs_{user_id}"))
    return builder.as_markup()



def get_my_waivers_keyboard(user_waivers_exist: bool):
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é '–ú–æ–∏ –º–µ–¥–æ—Ç–≤–æ–¥—ã'.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–º –æ—Ç–≤–æ–¥—ã.
    """
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚ûï –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ—Ç–≤–æ–¥", callback_data="set_user_waiver"))
    if user_waivers_exist:
        builder.row(InlineKeyboardButton(text="‚ûñ –û—Ç–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –æ—Ç–≤–æ–¥", callback_data="cancel_user_waiver"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main_menu"))
    return builder.as_markup()

def get_waiver_cancellation_keyboard(waivers: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –º–µ–¥–æ—Ç–≤–æ–¥–æ–≤, —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –¥–ª—è –æ—Ç–º–µ–Ω—ã."""
    builder = InlineKeyboardBuilder()
    for waiver in waivers:
        builder.row(InlineKeyboardButton(
            text=f"‚ùå –î–æ {waiver.end_date.strftime('%d.%m.%y')}: {waiver.reason[:25]}...",
            callback_data=f"delete_waiver_{waiver.id}"
        ))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="my_waivers"))
    return builder.as_markup()

def get_admin_waiver_management_keyboard(user_id: int, waivers: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –º–µ–¥–æ—Ç–≤–æ–¥–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è."""
    builder = InlineKeyboardBuilder()
    for waiver in waivers:
        creator_map = {'user': 'üë§', 'system': '‚öôÔ∏è', 'admin': 'üëë'}
        creator_icon = creator_map.get(str(waiver.created_by).lower(), '‚ùì')
        
        if str(waiver.created_by).isdigit():
            creator_icon = 'üëë'

        reason_short = (waiver.reason[:20] + '...') if len(waiver.reason) > 20 else waiver.reason
        
        builder.row(InlineKeyboardButton(
            text=f"‚ùå {creator_icon} –î–æ {waiver.end_date.strftime('%d.%m')} - {reason_short}",
            callback_data=f"admin_del_waiver_{waiver.id}_{user_id}"
        ))
        
    builder.row(InlineKeyboardButton(text="‚ûï –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π –º–µ–¥–æ—Ç–≤–æ–¥", callback_data=f"admin_waiver_{user_id}"))
    builder.row(InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", callback_data=f"admin_show_user_{user_id}"))
    return builder.as_markup()

def get_feedback_well_being_keyboard():
    builder = InlineKeyboardBuilder()
    buttons = [InlineKeyboardButton(text=str(i), callback_data=f"fb_wb_{i}") for i in range(1, 6)]
    builder.row(*buttons)
    return builder.as_markup()

def get_feedback_organization_keyboard():
    builder = InlineKeyboardBuilder()
    # –î–≤–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ 5 –∫–Ω–æ–ø–æ–∫
    builder.row(*[InlineKeyboardButton(text=str(i), callback_data=f"fb_org_{i}") for i in range(1, 6)])
    builder.row(*[InlineKeyboardButton(text=str(i), callback_data=f"fb_org_{i}") for i in range(6, 11)])
    return builder.as_markup()

def get_feedback_skip_keyboard():
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="fb_skip_step"))
    return builder.as_markup()



def get_events_for_post_processing_keyboard(events: list):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏."""
    builder = InlineKeyboardBuilder()
    for event in events:
        builder.row(types.InlineKeyboardButton(
            text=f"{event.event_datetime.strftime('%d.%m.%y')} - {event.name}",
            callback_data=f"post_process_event_{event.id}"
        ))
    builder.row(types.InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="admin_manage_events"))
    return builder.as_markup()

def get_participant_marking_keyboard(event_id: int, participants: list, marked_donations: set, marked_dkm: set):
    """–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤."""
    builder = InlineKeyboardBuilder()
    for reg in participants:
        user = reg.user
        
        donation_icon = "üü¢" if user.id in marked_donations else "‚ö™Ô∏è"
        dkm_icon = "üü¢" if user.id in marked_dkm else "‚ö™Ô∏è"

        builder.row(
            types.InlineKeyboardButton(text=user.full_name, callback_data="ignore"),
            types.InlineKeyboardButton(
                text=f"{donation_icon} –°–¥–∞–ª –∫—Ä–æ–≤—å", 
                callback_data=f"mark_participant_{event_id}_{user.id}_donation"
            ),
            types.InlineKeyboardButton(
                text=f"{dkm_icon} –í—Å—Ç—É–ø–∏–ª –≤ –î–ö–ú", 
                callback_data=f"mark_participant_{event_id}_{user.id}_dkm"
            )
        )
    builder.row(types.InlineKeyboardButton(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å", callback_data=f"finish_marking_{event_id}"))
    builder.row(types.InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin_manage_events"))
    return builder.as_markup()